<?php //%255BApp%255CEntity%255CUser%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        clone ($p['Doctrine\\ORM\\Mapping\\EntityListeners'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\EntityListeners')),
        clone ($p['Gedmo\\Mapping\\Annotation\\Loggable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Gedmo\\Mapping\\Annotation\\Loggable')),
    ],
    null,
    [
        'stdClass' => [
            'repositoryClass' => [
                1 => 'App\\Repository\\UserRepository',
            ],
            'name' => [
                2 => '`user`',
            ],
            'options' => [
                2 => [
                    '`collate`' => '`utf8_general_ci`',
                    '`charset`' => '`utf8`',
                ],
            ],
            'value' => [
                3 => [
                    'App\\EventListener\\UserListener',
                ],
            ],
            'logEntryClass' => [
                4 => 'App\\Entity\\LogEntity\\LogUser',
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
        $o[4],
    ],
    []
); }];
